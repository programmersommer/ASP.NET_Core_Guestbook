@model Guestbook.ViewModels.AddMessageViewModel
@using Microsoft.Extensions.Configuration  
@inject IConfiguration Configuration  
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf

@functions{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}

@{
    ViewData["Title"] = "Add Message";
}


<div class="container">

<form asp-controller="Demo" asp-action="Register" method="post" name="message">
    <div class="form-group">
     Name:  <input asp-for="SenderName" class="form-control" /> <br />
     Email:  <input asp-for="Email" class="form-control" /> <br />

    <textarea data-val="true" class="form-control"
        data-val-maxlength="The field Description must be a string or array type with a maximum length of &#x27;1024&#x27;."
        data-val-maxlength-max="1024"
        data-val-minlength="The field Description must be a string or array type with a minimum length of &#x27;5&#x27;."
        data-val-minlength-min="5"
        id="Description" name="Description">
     </textarea>

    <input type="hidden" id="RequestVerificationToken" 
          name="RequestVerificationToken" value="@GetAntiXsrfRequestToken()">

    <button type="button" class="btn btn-success mt-3" id="btnAdd">Submit</button>
    </div>
</form>

</div>

@section Scripts{

<script src="https://www.google.com/recaptcha/api.js?render=@Configuration["ReCaptcha:SiteKey"]" async defer></script>
<script nonce="jhbewVUueh73jVk">

    var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function() {
            if (xhttp.readyState == XMLHttpRequest.DONE) {
                if (xhttp.status == 200) {
                    alert(xhttp.responseText);
                } else {
                    alert('There was an error processing the AJAX request.');
                }
            }
        };

document.addEventListener("DOMContentLoaded", ready);

function ready() {
document.getElementById('btnAdd').onclick = ValidateRecaptcha;
}

    function ValidateRecaptcha() {
        grecaptcha.ready(function() {
           grecaptcha.execute('6Lf0AI0UAAAAACJQSkgj-_8ny-ij0biFMZxTmgcS', {action: 'homepage'}).then(function(token) {
                xhttp.open('POST', '@Url.Action("AddMessage", "Home")', true);
                xhttp.setRequestHeader("RequestVerificationToken", 
                document.getElementById('RequestVerificationToken').value);
                var formData = new FormData(document.forms.message);
                formData.append("Token", token)
                xhttp.send(formData);
         });
     });
   }
</script>
}